{"version":3,"names":["ZegoExpressEngine","zlogerror","zloginfo","zlogwarning","ZegoChangedCountOrProperty","_isRoomConnected","_currentRoomState","_currentRoomID","_audioOutputType","_usingFrontFacingCamera","_onMicDeviceOnCallbackMap","_onCameraDeviceOnCallbackMap","_onRoomStateChangedCallbackMap","_onRequireNewTokenCallbackMap","_onUserJoinCallbackMap","_onUserLeaveCallbackMap","_onUserInfoUpdateCallbackMap","_onSoundLevelUpdateCallbackMap","_onSDKConnectedCallbackMap","_onAudioOutputDeviceTypeChangeCallbackMap","_onOnlySelfInRoomCallbackMap","_onUserCountOrPropertyChangedCallbackMap","_onAudioVideoAvailableCallbackMap","_onAudioVideoUnavailableCallbackMap","_onInRoomMessageReceivedCallbackMap","_onInRoomMessageSentCallbackMap","_localCoreUser","_createCoreUser","_streamCoreUserMap","_coreUserMap","_qualityUpdateLogCounter","_inRoomMessageList","_resetData","_resetDataForLeavingRoom","userID","userName","profileUrl","extendInfo","_createPublicUser","coreUser","isMicrophoneOn","isMicDeviceOn","isCameraOn","isCameraDeviceOn","soundLevel","viewID","viewFillMode","streamID","publisherQuality","joinTime","_isLocalUser","undefined","_setLocalUserInfo","userInfo","_onRoomUserUpdate","roomID","updateType","userList","userInfoList","forEach","user","_getStreamIDByUserID","Date","now","_notifyUserInfoUpdate","push","_tryStartPlayStream","_notifyUserCountOrPropertyChanged","userAdd","Object","keys","callbackID","_tryStopPlayStream","userDelete","length","_onRoomStreamUpdate","streamList","users","stream","cameraStateUpdate","_onRemoteCameraStateUpdate","state","console","warn","isOn","_onAudioRouteChange","type","_onRemoteMicStateUpdate","microphoneStateUpdate","_onRoomStateChanged","reason","errorCode","extendedData","_tryStartPublishStream","_onInRoomMessageReceived","messageList","messages","msg","message","messageID","sendTime","sender","fromUser","_onRequireNewToken","token","instance","renewToken","then","resolve","catch","error","reject","_registerEngineCallback","on","quality","split","_getUserIDByStreamID","soundLevels","_notifySoundLevelUpdate","audioRoute","remainTimeInSecond","_unregisterEngineCallback","off","values","sort","user1","user2","map","JSON","parse","stringify","_getPublishStreamID","startPublishingStream","startPreview","fillMode","_tryStopPublishStream","force","stopPublishingStream","stopPreview","startPlayingStream","stopPlayingStream","isRoomConnected","updateRenderingProperty","onUserInfoUpdate","callback","onSoundLevelUpdate","onSDKConnected","connectSDK","appID","appSign","Promise","setEngineConfig","advancedConfig","engineProfile","scenario","createEngineWithProfile","engine","disconnectSDK","destroyEngine","finally","useFrontFacingCamera","isFrontFacing","useFrontCamera","isUsingFrontFacingCamera","enableSpeaker","enable","muteSpeaker","audioOutputDeviceType","turnMicDeviceOn","muteMicrophone","turnCameraDeviceOn","enableCamera","onMicDeviceOn","onCameraDeviceOn","setAudioOutputToSpeaker","isSpeaker","setAudioRouteToSpeaker","onAudioOutputDeviceTypeChange","setAudioConfig","config","setVideoConfig","onAudioVideoAvailable","onAudioVideoUnavailable","joinRoom","isUserStatusNotify","loginRoom","startSoundLevelMonitor","leaveRoom","logoutRoom","stopSoundLevelMonitor","onRoomStateChanged","onRequireNewToken","connectUser","disconnectUser","getLocalUserInfo","getUser","getAllUsers","a","b","publicUsers","onUserJoin","onUserLeave","onOnlySelfInRoom","onUserCountOrPropertyChanged","getInRoomMessages","sendInRoomMessage","sendBroadcastMessage","result","inRoomMessage","onInRoomMessageReceived","onInRoomMessageSent"],"sources":["ZegoUIKitInternal.js"],"sourcesContent":["import ZegoExpressEngine from 'zego-express-engine-reactnative';\nimport { zlogerror, zloginfo, zlogwarning } from '../../utils/logger';\nimport ZegoChangedCountOrProperty from './ZegoChangedCountOrProperty'\n\nvar _isRoomConnected = false;\nvar _currentRoomState = 7; // Logout\nvar _currentRoomID = '';\nvar _audioOutputType = 0;\nvar _usingFrontFacingCamera = true;\n\nvar _onMicDeviceOnCallbackMap = {};\nvar _onCameraDeviceOnCallbackMap = {};\nvar _onRoomStateChangedCallbackMap = {};\nvar _onRequireNewTokenCallbackMap = {};\nvar _onUserJoinCallbackMap = {};\nvar _onUserLeaveCallbackMap = {};\nvar _onUserInfoUpdateCallbackMap = {};\nvar _onSoundLevelUpdateCallbackMap = {};\nvar _onSDKConnectedCallbackMap = {};\nvar _onAudioOutputDeviceTypeChangeCallbackMap = {};\nvar _onOnlySelfInRoomCallbackMap = {};\nvar _onUserCountOrPropertyChangedCallbackMap = {};\nvar _onAudioVideoAvailableCallbackMap = {};\nvar _onAudioVideoUnavailableCallbackMap = {};\nvar _onInRoomMessageReceivedCallbackMap = {};\nvar _onInRoomMessageSentCallbackMap = {};\n\nvar _localCoreUser = _createCoreUser('', '', '', {});\nvar _streamCoreUserMap = {}; // <streamID, CoreUser>\nvar _coreUserMap = {}; // <userID, CoreUser>\nvar _qualityUpdateLogCounter = 0;\n\nvar _inRoomMessageList = [];\n\nfunction _resetData() {\n    zloginfo('Reset all data.')\n    _localCoreUser = _createCoreUser('', '', '', {});\n    _streamCoreUserMap = {};\n    _coreUserMap = {};\n    _currentRoomID = '';\n    _currentRoomState = 7;\n    _isRoomConnected = false;\n    _audioOutputType = 0;\n    _inRoomMessageList = [];\n}\n\nfunction _resetDataForLeavingRoom() {\n    zloginfo('Reset data for leaving room.')\n    _streamCoreUserMap = {};\n    _coreUserMap = {};\n    _currentRoomID = '';\n    _currentRoomState = 7;\n    _isRoomConnected = false;\n    const { userID, userName, profileUrl, extendInfo } = _localCoreUser;\n    _localCoreUser = _createCoreUser(userID, userName, profileUrl, extendInfo);\n    _coreUserMap[_localCoreUser.userID] = _localCoreUser;\n    _inRoomMessageList = [];\n}\n\nfunction _createPublicUser(coreUser) {\n    return {\n        userID: coreUser.userID,\n        userName: coreUser.userName,\n        extendInfo: coreUser.extendInfo,\n        isMicrophoneOn: coreUser.isMicDeviceOn,\n        isCameraOn: coreUser.isCameraDeviceOn,\n        soundLevel: coreUser.soundLevel\n    }\n}\nfunction _createCoreUser(userID, userName, profileUrl, extendInfo) {\n    return {\n        userID: userID,\n        userName: userName,\n        profileUrl: profileUrl,\n        extendInfo: extendInfo,\n        viewID: -1,\n        viewFillMode: 1,\n        streamID: '',\n        isMicDeviceOn: false,\n        isCameraDeviceOn: false,\n        publisherQuality: 0,\n        soundLevel: 0,\n        joinTime: 0,\n    }\n}\nfunction _isLocalUser(userID) {\n    return userID === undefined || userID === '' || _localCoreUser.userID === userID;\n}\nfunction _setLocalUserInfo(userInfo) {\n    _localCoreUser = _createCoreUser(userInfo.userID, userInfo.userName, userInfo.profileUrl, userInfo.extendInfo);\n    _coreUserMap[userInfo.userID] = _localCoreUser;\n}\n\nfunction _onRoomUserUpdate(roomID, updateType, userList) {\n    // No need for roomID, does not support multi-room right now.\n    const userInfoList = [];\n    if (updateType == 0) {\n        userList.forEach(user => {\n            if (!(user.userID in _coreUserMap)) {\n                const coreUser = _createCoreUser(user.userID, user.userName);\n                _coreUserMap[user.userID] = coreUser;\n            }\n            const streamID = _getStreamIDByUserID(user.userID);\n            if (streamID in _streamCoreUserMap) {\n                _coreUserMap[user.userID].streamID = streamID;\n            }\n            _coreUserMap[user.userID].joinTime = Date.now();\n            _notifyUserInfoUpdate(_coreUserMap[user.userID]);\n\n            userInfoList.push(_createPublicUser(_coreUserMap[user.userID]));\n\n            // Start after user insert into list\n            _tryStartPlayStream(user.userID);\n        });\n        _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.userAdd);\n\n        zloginfo(\"User Join: \", userInfoList)\n        Object.keys(_onUserJoinCallbackMap).forEach(callbackID => {\n            if (_onUserJoinCallbackMap[callbackID]) {\n                _onUserJoinCallbackMap[callbackID](userInfoList);\n            }\n        });\n    } else {\n        userList.forEach(user => {\n            if (user.userID in _coreUserMap) {\n                const coreUser = _coreUserMap[user.userID];\n                const userInfo = {\n                    userID: coreUser.userID,\n                    userName: coreUser.userName,\n                    profileUrl: coreUser.profileUrl,\n                    extendInfo: coreUser.extendInfo\n                }\n                userInfoList.push(userInfo);\n\n                // Stop play stream before remove user list\n                _tryStopPlayStream(coreUser.userID, true);\n                delete _coreUserMap[user.userID];\n            }\n        });\n        _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.userDelete);\n        zloginfo(\"User Leave: \", userInfoList)\n        Object.keys(_onUserLeaveCallbackMap).forEach(callbackID => {\n            if (_onUserLeaveCallbackMap[callbackID]) {\n                _onUserLeaveCallbackMap[callbackID](userInfoList);\n            }\n        })\n        if (Object.keys(_coreUserMap).length <= 1) {\n            Object.keys(_onOnlySelfInRoomCallbackMap).forEach(callbackID => {\n                if (_onOnlySelfInRoomCallbackMap[callbackID]) {\n                    _onOnlySelfInRoomCallbackMap[callbackID]();\n                }\n            })\n        }\n    }\n}\nfunction _onRoomStreamUpdate(roomID, updateType, streamList) {\n    zloginfo('_onRoomStreamUpdate: ', roomID, updateType, streamList)\n    var users = [];\n    if (updateType == 0) { // Add\n        streamList.forEach(stream => {\n            const userID = stream.user.userID;\n            const userName = stream.user.userName;\n            const streamID = stream.streamID;\n            if (userID in _coreUserMap) {\n                _coreUserMap[userID].streamID = streamID;\n                _streamCoreUserMap[streamID] = _coreUserMap[userID];\n                _notifyUserInfoUpdate(_coreUserMap[userID]);\n                _tryStartPlayStream(userID);\n\n                users.push(_coreUserMap[userID]);\n            } else {\n                _streamCoreUserMap[streamID] = _createCoreUser(userID, userName, '', {});\n                _streamCoreUserMap[streamID].streamID = streamID;\n\n                _coreUserMap[userID] = _streamCoreUserMap[streamID];\n\n                users.push(_streamCoreUserMap[streamID]);\n            }\n        })\n\n        Object.keys(_onAudioVideoAvailableCallbackMap).forEach(callbackID => {\n            if (_onAudioVideoAvailableCallbackMap[callbackID]) {\n                _onAudioVideoAvailableCallbackMap[callbackID](users);\n            }\n        })\n    } else {\n        streamList.forEach(stream => {\n            const userID = stream.user.userID;\n            const streamID = stream.streamID;\n            if (userID in _coreUserMap) {\n                _tryStopPlayStream(userID, true);\n                _coreUserMap[userID].isCameraDeviceOn = false;\n                _coreUserMap[userID].isMicDeviceOn = false;\n                _coreUserMap[userID].streamID = '';\n                _notifyUserInfoUpdate(_coreUserMap[userID]);\n\n                users.push(_coreUserMap[userID]);\n\n                delete _streamCoreUserMap[streamID];\n            }\n        })\n        _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.cameraStateUpdate);\n\n        Object.keys(_onAudioVideoUnavailableCallbackMap).forEach(callbackID => {\n            if (_onAudioVideoUnavailableCallbackMap[callbackID]) {\n                _onAudioVideoUnavailableCallbackMap[callbackID](users);\n            }\n        })\n    }\n}\nfunction _onRemoteCameraStateUpdate(userID, state) {\n    console.warn('>>>>>>>>>>>>> _onRemoteCameraStateUpdate', userID, state);\n    if (userID in _coreUserMap) {\n        const isOn = state == 0; // 0 for Open\n        _coreUserMap[userID].isCameraDeviceOn = isOn;\n        _notifyUserInfoUpdate(_coreUserMap[userID]);\n        _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.cameraStateUpdate);\n\n        Object.keys(_onCameraDeviceOnCallbackMap).forEach(callbackID => {\n            if (_onCameraDeviceOnCallbackMap[callbackID]) {\n                _onCameraDeviceOnCallbackMap[callbackID](userID, isOn);\n            }\n        });\n\n        if (userID != _localCoreUser.userID) {\n            if (isOn) {\n                _tryStartPlayStream(userID);\n            }\n        }\n    }\n}\nfunction _onAudioRouteChange(type) {\n    Object.keys(_onAudioOutputDeviceTypeChangeCallbackMap).forEach(callbackID => {\n        if (_onAudioOutputDeviceTypeChangeCallbackMap[callbackID]) {\n            _onAudioOutputDeviceTypeChangeCallbackMap[callbackID](type);\n        }\n    });\n    _audioOutputType = type;\n}\nfunction _onRemoteMicStateUpdate(userID, state) {\n    console.warn('>>>>>>>>>>>>> _onRemoteMicStateUpdate', userID, state);\n    if (userID in _coreUserMap) {\n        const isOn = state == 0; // 0 for Open\n        _coreUserMap[userID].isMicDeviceOn = isOn;\n        _notifyUserInfoUpdate(_coreUserMap[userID]);\n        _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.microphoneStateUpdate);\n\n        Object.keys(_onMicDeviceOnCallbackMap).forEach(callbackID => {\n            if (_onMicDeviceOnCallbackMap[callbackID]) {\n                _onMicDeviceOnCallbackMap[callbackID](userID, isOn);\n            }\n        });\n\n        if (userID != _localCoreUser.userID) {\n            if (isOn) {\n                _tryStartPlayStream(userID);\n            }\n        }\n    }\n}\nfunction _onRoomStateChanged(roomID, reason, errorCode, extendedData) {\n    zloginfo('Room state chaged: ', roomID, reason, errorCode, extendedData);\n    // Not support multi-room right now\n    if (reason == 1 || reason == 4) { // Logined || Reconnected\n        _isRoomConnected = true;\n        _tryStartPublishStream();\n    } else {\n        _isRoomConnected = false;\n    }\n    _currentRoomState = reason;\n\n    Object.keys(_onRoomStateChangedCallbackMap).forEach(callbackID => {\n        // callback may remove from map during room state chaging\n        if (callbackID in _onRoomStateChangedCallbackMap) {\n            if (_onRoomStateChangedCallbackMap[callbackID]) {\n                _onRoomStateChangedCallbackMap[callbackID](reason, errorCode, extendedData);\n            }\n        }\n    });\n}\nfunction _onInRoomMessageReceived(roomID, messageList) {\n    zloginfo('Received in room message: ', roomID, messageList.length);\n    var messages = [];\n    messageList.forEach(msg => {\n        const message = {\n            message: msg.message,\n            messageID: msg.messageID,\n            sendTime: msg.sendTime,\n            sender: _createPublicUser(_coreUserMap[msg.fromUser.userID])\n        }\n        messages.push(message);\n        _inRoomMessageList.push(message);\n    })\n\n    Object.keys(_onInRoomMessageReceivedCallbackMap).forEach(callbackID => {\n        // callback may remove from map during room state chaging\n        if (callbackID in _onInRoomMessageReceivedCallbackMap) {\n            if (_onInRoomMessageReceivedCallbackMap[callbackID]) {\n                _onInRoomMessageReceivedCallbackMap[callbackID](messages);\n            }\n        }\n    });\n}\nfunction _onRequireNewToken() {\n    Object.keys(_onRequireNewTokenCallbackMap).forEach(callbackID => {\n        if (callbackID in _onRequireNewTokenCallbackMap) {\n            if (_onRequireNewTokenCallbackMap[callbackID]) {\n                const token = _onRequireNewTokenCallbackMap[callbackID]();\n                if (token) {\n                    ZegoExpressEngine.instance().renewToken(_currentRoomID, token).then(() => {\n                        resolve();\n                    }).catch((error)=>{\n                        zlogerror('Renew token failed: ', error);\n                        reject(error);\n                    })\n                } else {\n                    zlogerror('Renew token failed: the returned token is abnormal');\n                }\n            }\n        }\n    });\n}\nfunction _registerEngineCallback() {\n    zloginfo('Register callback for ZegoExpressEngine...')\n    ZegoExpressEngine.instance().on(\n        'roomUserUpdate',\n        (roomID, updateType, userList) => {\n            zloginfo('[roomUserUpdate callback]', roomID, updateType, userList);\n            _onRoomUserUpdate(roomID, updateType, userList);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'roomStreamUpdate',\n        (roomID, updateType, streamList) => {\n            zloginfo('[roomStreamUpdate callback]', roomID, updateType, streamList);\n            _onRoomStreamUpdate(roomID, updateType, streamList);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'publisherQualityUpdate',\n        (streamID, quality) => {\n            if (_qualityUpdateLogCounter % 10 == 0) {\n                _qualityUpdateLogCounter = 0;\n                zloginfo('[publisherQualityUpdate callback]', streamID, quality);\n            }\n            _qualityUpdateLogCounter++;\n            if (streamID.split('_')[2] === 'main') {\n                _localCoreUser.publisherQuality = quality;\n                _coreUserMap[_localCoreUser.userID].publisherQuality = quality;\n                _notifyUserInfoUpdate(_coreUserMap[_localCoreUser.userID]);\n            }\n        },\n    );\n    // ZegoExpressEngine.instance().on(\n    //     'publisherStateUpdate',\n    //     (streamID, state, errorCode, extendedData) => {\n    //         zloginfo('publisherStateUpdate#################', streamID, state, errorCode)\n    //     },\n    // );\n    ZegoExpressEngine.instance().on(\n        'playerQualityUpdate',\n        (streamID, quality) => {\n            if (_qualityUpdateLogCounter % 10 == 0) {\n                zloginfo('[playerQualityUpdate callback]', streamID, quality);\n            }\n            // TODO\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'remoteCameraStateUpdate',\n        (streamID, state) => {\n            zloginfo('[remoteCameraStateUpdate callback]', streamID, state);\n            _onRemoteCameraStateUpdate(_getUserIDByStreamID(streamID), state);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'remoteMicStateUpdate',\n        (streamID, state) => {\n            zloginfo('[remoteMicStateUpdate callback]', streamID, state);\n            _onRemoteMicStateUpdate(_getUserIDByStreamID(streamID), state);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'playerStateUpdate',\n        (streamID, state, errorCode, extendedData) => {\n            zloginfo('[playerStateUpdate callback]', streamID, state, errorCode, extendedData);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'remoteSoundLevelUpdate',\n        (soundLevels) => {\n            // {streamID, soundLavel} value from 0.0 to 100.0\n            // zloginfo('[remoteSoundLevelUpdate callback]', soundLevels);\n            Object.keys(soundLevels).forEach(streamID => {\n                const userID = _getUserIDByStreamID(streamID);\n                if (userID in _coreUserMap) {\n                    _coreUserMap[userID].soundLevel = soundLevels[streamID];\n                    _notifySoundLevelUpdate(userID, soundLevels[streamID]);\n                }\n            })\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'capturedSoundLevelUpdate',\n        (soundLevel) => {\n            if (_localCoreUser.userID === \"\" || !(_localCoreUser.userID in _coreUserMap)) {\n                return;\n            }\n            _localCoreUser.soundLevel = soundLevel;\n            _coreUserMap[_localCoreUser.userID].soundLevel = soundLevel;\n            _notifySoundLevelUpdate(_localCoreUser.userID, soundLevel);\n            // zloginfo('capturedSoundLevelUpdate', soundLevel)\n        },\n    );\n    // https://doc-en-api.zego.im/ReactNative/enums/_zegoexpressdefines_.zegoroomstatechangedreason.html\n    ZegoExpressEngine.instance().on(\n        'roomStateChanged',\n        (roomID, reason, errorCode, extendedData) => {\n            zloginfo('[roomStateChanged callback]', roomID, reason, errorCode, extendedData);\n            _onRoomStateChanged(roomID, reason, errorCode, extendedData);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'audioRouteChange',\n        (audioRoute) => {\n            zloginfo('[audioRouteChange callback]', audioRoute);\n            _onAudioRouteChange(audioRoute);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'IMRecvBroadcastMessage',\n        (roomID, messageList) => {\n            _onInRoomMessageReceived(roomID, messageList);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'roomTokenWillExpire',\n        (roomID, remainTimeInSecond) => {\n            _onRequireNewToken();\n        }\n    );\n}\nfunction _unregisterEngineCallback() {\n    zloginfo('Unregister callback from ZegoExpressEngine...');\n    ZegoExpressEngine.instance().off('roomUserUpdate');\n    ZegoExpressEngine.instance().off('roomStreamUpdate');\n    ZegoExpressEngine.instance().off('publisherQualityUpdate');\n    ZegoExpressEngine.instance().off('playerQualityUpdate');\n    ZegoExpressEngine.instance().off('remoteCameraStateUpdate');\n    ZegoExpressEngine.instance().off('remoteMicStateUpdate');\n    ZegoExpressEngine.instance().off('playerStateUpdate');\n    ZegoExpressEngine.instance().off('remoteSoundLevelUpdate');\n    ZegoExpressEngine.instance().off('capturedSoundLevelUpdate');\n    ZegoExpressEngine.instance().off('roomStateChanged');\n    ZegoExpressEngine.instance().off('audioRouteChange');\n    ZegoExpressEngine.instance().off('IMRecvBroadcastMessage');\n}\nfunction _notifyUserCountOrPropertyChanged(type) {\n    const msg = [\"\", \"user add\", \"user delete\", \"mic update\", \"camera update\"];\n    const userList = Object.values(_coreUserMap).sort((user1, user2) => {\n        return user2.joinTime - user1.joinTime ;\n    }).map(user => _createPublicUser(user));\n    zloginfo(`_notifyUserCountOrPropertyChanged ${msg[type]}`, userList);\n    Object.keys(_onUserCountOrPropertyChangedCallbackMap).forEach(callbackID => {\n        if (_onUserCountOrPropertyChangedCallbackMap[callbackID]) {\n            _onUserCountOrPropertyChangedCallbackMap[callbackID](JSON.parse(JSON.stringify(userList)));\n        }\n    })\n}\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Stream Handling <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nfunction _getUserIDByStreamID(streamID) {\n    // StreamID format: roomid_userid_main\n    for (const userID in _coreUserMap) {\n        if ( _coreUserMap[userID].streamID == streamID) {\n            return userID;\n        }\n    }\n    return ''\n}\nfunction _getPublishStreamID() {\n    return _currentRoomID + '_' + _localCoreUser.userID + '_main';\n}\nfunction _getStreamIDByUserID(userID) {\n    return _currentRoomID + '_' + userID + '_main';\n}\nfunction _tryStartPublishStream() {\n    if (_localCoreUser.isMicDeviceOn || _localCoreUser.isCameraDeviceOn) {\n        zloginfo('_tryStartPublishStream', _localCoreUser.isMicDeviceOn, _localCoreUser.isCameraDeviceOn, _localCoreUser.streamID);\n        if (!_localCoreUser.streamID) {\n            return;\n        }\n        ZegoExpressEngine.instance().startPublishingStream(_localCoreUser.streamID).then(() => {\n            if ((_localCoreUser.streamID in _streamCoreUserMap)) {\n                _streamCoreUserMap[_localCoreUser.streamID] = _localCoreUser;\n\n                Object.keys(_onAudioVideoAvailableCallbackMap).forEach(callbackID => {\n                    if (_onAudioVideoAvailableCallbackMap[callbackID]) {\n                        _onAudioVideoAvailableCallbackMap[callbackID]([_localCoreUser]);\n                    }\n                })\n            }\n        });\n        zloginfo('ZegoExpressEngine startPreview:', _localCoreUser);\n        if (_localCoreUser.viewID > 0) {\n            ZegoExpressEngine.instance().startPreview({\n                'reactTag': _localCoreUser.viewID,\n                'viewMode': _localCoreUser.fillMode,\n                'backgroundColor': 0\n            }).catch((error) => {\n                zlogerror(error);\n            });\n        }\n    }\n}\nfunction _tryStopPublishStream(force = false) {\n    if (!_localCoreUser.isMicDeviceOn && !_localCoreUser.isCameraDeviceOn) {\n        zloginfo('stopPublishStream')\n        ZegoExpressEngine.instance().stopPublishingStream();\n        ZegoExpressEngine.instance().stopPreview();\n        if ((_localCoreUser.streamID in _streamCoreUserMap)) {\n            delete _streamCoreUserMap[_localCoreUser.streamID];\n\n            Object.keys(_onAudioVideoUnavailableCallbackMap).forEach(callbackID => {\n                if (_onAudioVideoUnavailableCallbackMap[callbackID]) {\n                    _onAudioVideoUnavailableCallbackMap[callbackID]([_localCoreUser]);\n                }\n            })\n        }\n    }\n}\nfunction _tryStartPlayStream(userID) {\n    if (userID in _coreUserMap) {\n        const user = _coreUserMap[userID];\n        zloginfo('_tryStartPlayStream: ', user)\n        if (user.streamID !== '') {\n            if (user.viewID > 0) {\n                ZegoExpressEngine.instance().startPlayingStream(user.streamID, {\n                    'reactTag': user.viewID,\n                    'viewMode': user.fillMode,\n                    'backgroundColor': 0\n                });\n            } else {\n                ZegoExpressEngine.instance().startPlayingStream(user.streamID);\n            }\n        }\n    }\n}\nfunction _tryStopPlayStream(userID, force = false) {\n    if (userID in _coreUserMap) {\n        const user = _coreUserMap[userID];\n        if (force || (!user.isMicDeviceOn && !user.isCameraDeviceOn)) {\n            ZegoExpressEngine.instance().stopPlayingStream(user.streamID);\n        }\n    }\n}\nfunction _notifyUserInfoUpdate(userInfo) {\n    Object.keys(_onUserInfoUpdateCallbackMap).forEach(callbackID => {\n        if (_onUserInfoUpdateCallbackMap[callbackID]) {\n            _onUserInfoUpdateCallbackMap[callbackID](userInfo);\n        }\n    })\n}\nfunction _notifySoundLevelUpdate(userID, soundLevel) {\n    Object.keys(_onSoundLevelUpdateCallbackMap).forEach(callbackID => {\n        if (_onSoundLevelUpdateCallbackMap[callbackID]) {\n            _onSoundLevelUpdateCallbackMap[callbackID](userID, soundLevel);\n        }\n    });\n}\n\nexport default {\n    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Internal <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n    isRoomConnected() {\n        return _isRoomConnected;\n    },\n    updateRenderingProperty(userID, viewID, fillMode) {\n        zloginfo('updateRenderingProperty: ', userID, viewID, fillMode, '<<<<<<<<<<<<<<<<<<<<<<<<<<')\n        if (userID === undefined) {\n            zlogwarning('updateRenderingProperty: ignore undifine useid. Use empty string for local user.')\n            return;\n        }\n        if (userID === '') {\n            userID = _localCoreUser.userID;\n        }\n        if (userID in _coreUserMap) {\n            _coreUserMap[userID].viewID = viewID;\n            _coreUserMap[userID].fillMode = fillMode;\n            _notifyUserInfoUpdate(_coreUserMap[userID]);\n\n            if (_localCoreUser.userID == userID) {\n                _localCoreUser.viewID = viewID;\n                _localCoreUser.fillMode = fillMode;\n                if (viewID > 0) {\n                    _tryStartPublishStream();\n                } else {\n                    _tryStopPublishStream();\n                }\n            } else {\n                // Check if stream is ready to play for remote user\n                if (viewID > 0) {\n                    _tryStartPlayStream(userID);\n                }\n            }\n        }\n    },\n    onUserInfoUpdate(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onUserInfoUpdateCallbackMap) {\n                zloginfo('[onUserInfoUpdate] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onUserInfoUpdateCallbackMap[callbackID];\n            }\n        } else {\n            _onUserInfoUpdateCallbackMap[callbackID] = callback;\n        }\n    },\n    onSoundLevelUpdate(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onSoundLevelUpdateCallbackMap) {\n                zloginfo('[onSoundLevelUpdate] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onSoundLevelUpdateCallbackMap[callbackID];\n            }\n        } else {\n            _onSoundLevelUpdateCallbackMap[callbackID] = callback;\n        }\n    },\n    onSDKConnected(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onSDKConnectedCallbackMap) {\n                zloginfo('[onSDKConnected] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onSDKConnectedCallbackMap[callbackID];\n            }\n        } else {\n            _onSDKConnectedCallbackMap[callbackID] = callback;\n        }\n    },\n    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> SDK <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n    connectSDK(appID, appSign, userInfo) {\n        return new Promise((resolve, reject) => {\n            // set advancedConfig to monitor remote user's device changed\n            ZegoExpressEngine.setEngineConfig({\n                advancedConfig: {\n                    'notify_remote_device_unknown_status': 'true',\n                    'notify_remote_device_init_status': 'true',\n                }\n            });\n            const engineProfile = {\n                appID: appID,\n                appSign: appSign,\n                scenario: 0,\n            }\n            ZegoExpressEngine.createEngineWithProfile(engineProfile).then((engine) => {\n                zloginfo('Create ZegoExpressEngine succeed!');\n\n                _unregisterEngineCallback();\n                _registerEngineCallback();\n\n                _setLocalUserInfo(userInfo);\n\n                Object.keys(_onSDKConnectedCallbackMap).forEach(callbackID => {\n                    // TODO cause  WARN  Possible Unhandled Promise Rejection (id: 56)\n                    if (_onSDKConnectedCallbackMap[callbackID]) {\n                        _onSDKConnectedCallbackMap[callbackID]();\n                    }\n                });\n                resolve();\n            }).catch((error) => {\n                zlogerror('Create ZegoExpressEngine Failed: ', error);\n                reject(error);\n            });\n        });\n    },\n    disconnectSDK() {\n        return new Promise((resolve, reject) => {\n            if (ZegoExpressEngine.instance()) {\n                ZegoExpressEngine.destroyEngine().then(() => {\n                    zloginfo('Destroy ZegoExpressEngine finished!')\n                    resolve();\n                }).catch((error) => {\n                    zlogerror('Destroy ZegoExpressEngine failed!', error);\n                    reject(error);\n                }).finally(() => {\n                    _resetData();\n                })\n            } else {\n                resolve();\n            }\n        });\n    },\n\n    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Audio Video <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n    useFrontFacingCamera(isFrontFacing) {\n        zloginfo('Use front facing camera: ', isFrontFacing);\n        _usingFrontFacingCamera = isFrontFacing;\n        return ZegoExpressEngine.instance().useFrontCamera(isFrontFacing, 0);\n    },\n    isUsingFrontFacingCamera() {\n        return _usingFrontFacingCamera;\n    },\n    isMicDeviceOn(userID) {\n        if (!userID) {\n            return _localCoreUser.isMicDeviceOn;\n        }\n        else if (userID in _coreUserMap) {\n            return _coreUserMap[userID].isMicDeviceOn;\n        } else {\n            zlogwarning('Can not check mic device is on for user[', userID, '], because no record!');\n            return true;\n        }\n    },\n    isCameraDeviceOn(userID) {\n        if (!userID) {\n            return _localCoreUser.isCameraDeviceOn;\n        }\n        else if (userID in _coreUserMap) {\n            return _coreUserMap[userID].isCameraDeviceOn;\n        } else {\n            zlogwarning('No record for user: ', userID, '. Can not check camera device is on.')\n            return true;\n        }\n    },\n    enableSpeaker(enable) {\n        // TODO\n        return new Promise((resolve, reject) => {\n            if (!_isRoomConnected) {\n                zlogerror('You are not connect to any room.')\n                reject();\n            } else {\n                ZegoExpressEngine.instance().muteSpeaker(!enable);\n                resolve();\n            }\n        });\n    },\n    audioOutputDeviceType() {\n        return _audioOutputType;\n    },\n    turnMicDeviceOn(userID, on) {\n        return new Promise((resolve, reject) => {\n            if (_isLocalUser(userID)) {\n                zloginfo('turnMicDeviceOn: ', _localCoreUser.userID, on);\n                ZegoExpressEngine.instance().muteMicrophone(!on);\n\n                _onRemoteMicStateUpdate(_localCoreUser.userID, on ? 0 : 10); // 0 for open, 10 for mute\n\n                _localCoreUser.isMicDeviceOn = on;\n                _coreUserMap[_localCoreUser.userID].isMicDeviceOn = on;\n                _notifyUserInfoUpdate(_localCoreUser);\n                _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.microphoneStateUpdate);\n\n                if (on) {\n                    _tryStartPublishStream();\n                } else {\n                    _tryStopPublishStream();\n                }\n                resolve();\n            } else {\n                // TODO\n                zlogwarning(\"Can not turn on other's mic device on this version\");\n                reject();\n            }\n        });\n    },\n    turnCameraDeviceOn(userID, on) {\n        return new Promise((resolve, reject) => {\n            if (_isLocalUser(userID)) {\n                // Default to Main Channel\n                zloginfo('turnCameraDeviceOn: ', _localCoreUser.userID, on);\n                ZegoExpressEngine.instance().enableCamera(on, 0);\n\n                _onRemoteCameraStateUpdate(_localCoreUser.userID, on ? 0 : 10); // 0 for open, 10 for mute\n\n                _localCoreUser.isCameraDeviceOn = on;\n                // if (!on) {\n                //     _localCoreUser.viewID = -1;\n                // }\n                _coreUserMap[_localCoreUser.userID] = _localCoreUser;\n                _notifyUserInfoUpdate(_localCoreUser);\n                _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.cameraStateUpdate);\n\n                if (on) {\n                    _tryStartPublishStream();\n                } else {\n                    _tryStopPublishStream();\n                }\n                resolve();\n            } else {\n                // TODO\n                zlogwarning(\"Can not turn on other's camera device on this version\");\n                reject();\n            }\n        });\n    },\n    onMicDeviceOn(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onMicDeviceOnCallbackMap) {\n                zloginfo('[onMicDeviceOn] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onMicDeviceOnCallbackMap[callbackID];\n            }\n        } else {\n            _onMicDeviceOnCallbackMap[callbackID] = callback;\n        }\n    },\n    onCameraDeviceOn(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onCameraDeviceOnCallbackMap) {\n                zloginfo('[onCameraDeviceOn] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onCameraDeviceOnCallbackMap[callbackID];\n            }\n        } else {\n            _onCameraDeviceOnCallbackMap[callbackID] = callback;\n        }\n    },\n    setAudioOutputToSpeaker(isSpeaker) {\n        ZegoExpressEngine.instance().setAudioRouteToSpeaker(isSpeaker);\n    },\n    onAudioOutputDeviceTypeChange(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onAudioOutputDeviceTypeChangeCallbackMap) {\n                zloginfo('[onAudioOutputDeviceTypeChange] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onAudioOutputDeviceTypeChangeCallbackMap[callbackID];\n            }\n        } else {\n            _onAudioOutputDeviceTypeChangeCallbackMap[callbackID] = callback;\n        }\n    },\n    setAudioConfig(config) {\n        // TODO\n    },\n    setVideoConfig(config) {\n        // TODO\n    },\n    onAudioVideoAvailable(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onAudioVideoAvailableCallbackMap) {\n                zloginfo('[onAudioVideoAvailable] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onAudioVideoAvailableCallbackMap[callbackID];\n            }\n        } else {\n            _onAudioVideoAvailableCallbackMap[callbackID] = callback;\n        }\n    },\n    onAudioVideoUnavailable(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onAudioVideoUnavailableCallbackMap) {\n                zloginfo('[onAudioVideoUnavailable] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onAudioVideoUnavailableCallbackMap[callbackID];\n            }\n        } else {\n            _onAudioVideoUnavailableCallbackMap[callbackID] = callback;\n        }\n    },\n\n    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Room <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n    joinRoom(roomID, token) {\n        return new Promise((resolve, reject) => {\n            const user = { userID: _localCoreUser.userID, userName: _localCoreUser.userName };\n            const config = { isUserStatusNotify: true }\n            token && (config.token = token);\n            _currentRoomID = roomID;\n            ZegoExpressEngine.instance().loginRoom(roomID, user, config).then(() => {\n                zloginfo('Join room success.', user)\n                ZegoExpressEngine.instance().startSoundLevelMonitor();\n\n                _localCoreUser.streamID = _getPublishStreamID();\n                _coreUserMap[_localCoreUser.userID] = _localCoreUser;\n                _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.userAdd);\n                resolve();\n            }).catch((error) => {\n                zlogerror('Join room falied: ', error);\n                _currentRoomID = '';\n                reject(error);\n            });\n        });\n    },\n    leaveRoom() {\n        return new Promise((resolve, reject) => {\n            if (_currentRoomID == '') {\n                zlogwarning('You are not join in any room, no need to leave room.');\n                resolve();\n            } else {\n                zloginfo('leaveRoom: ', _currentRoomID)\n                ZegoExpressEngine.instance().logoutRoom(_currentRoomID).then(() => {\n                    zloginfo('Leave room succeed.')\n                    ZegoExpressEngine.instance().stopSoundLevelMonitor();\n                    _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.userDelete);\n                    _resetDataForLeavingRoom();\n                    resolve();\n                }).catch((error) => {\n                    zlogerror('Leave room failed: ', error);\n                    reject(error);\n                });\n            }\n        });\n    },\n    onRoomStateChanged(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onRoomStateChangedCallbackMap) {\n                zloginfo('[onRoomStateChanged] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onRoomStateChangedCallbackMap[callbackID];\n            }\n        } else {\n            _onRoomStateChangedCallbackMap[callbackID] = callback;\n        }\n    },\n    onRequireNewToken(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onRequireNewTokenCallbackMap) {\n                zloginfo('[onRequireNewToken] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onRequireNewTokenCallbackMap[callbackID];\n            }\n        } else {\n            _onRequireNewTokenCallbackMap[callbackID] = callback;\n        }\n    },\n\n    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> User <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n    connectUser(userID, userName) {\n        _setLocalUserInfo({ userID: userID, userName: userName });\n        // TODO ZIM login\n    },\n    disconnectUser() {\n        delete _coreUserMap[_localCoreUser.userID];\n        _localCoreUser = _createCoreUser('', '', '', {});\n        // TODO ZIM logout\n    },\n    getLocalUserInfo() {\n        return _localCoreUser;\n    },\n    getUser(userID) {\n        return _coreUserMap[userID];\n    },\n    getAllUsers() {\n        const users = Object.values(_coreUserMap);\n        users.sort((a, b) => { return a.joinTime > b.joinTime })\n        var publicUsers = [];\n        users.forEach(user => {\n            publicUsers.push(_createPublicUser(user));\n        })\n        return publicUsers;\n    },\n    onUserJoin(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onUserJoinCallbackMap) {\n                zloginfo('[onUserJoin] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onUserJoinCallbackMap[callbackID];\n            }\n        } else {\n            _onUserJoinCallbackMap[callbackID] = callback;\n        }\n    },\n    onUserLeave(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onUserLeaveCallbackMap) {\n                zloginfo('[onUserLeave] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onUserLeaveCallbackMap[callbackID];\n            }\n        } else {\n            _onUserLeaveCallbackMap[callbackID] = callback;\n        }\n    },\n    onOnlySelfInRoom(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onOnlySelfInRoomCallbackMap) {\n                zloginfo('[onOnlySelfInRoom] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onOnlySelfInRoomCallbackMap[callbackID];\n            }\n        } else {\n            _onOnlySelfInRoomCallbackMap[callbackID] = callback;\n        }\n    },\n    onUserCountOrPropertyChanged(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onUserCountOrPropertyChangedCallbackMap) {\n                zloginfo('[onUserCountOrPropertyChanged] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onUserCountOrPropertyChangedCallbackMap[callbackID];\n            }\n        } else {\n            _onUserCountOrPropertyChangedCallbackMap[callbackID] = callback;\n        }\n    },\n\n    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Message <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n    getInRoomMessages() {\n        return _inRoomMessageList;\n    },\n    sendInRoomMessage(message) {\n        return new Promise((resolve, reject) => {\n            ZegoExpressEngine.instance().sendBroadcastMessage(_currentRoomID, message).then((result) => {\n                zloginfo('SendInRoomMessage finished.', result);\n                const { errorCode, messageID } = result;\n                if (errorCode > 0) {\n                    reject(errorCode)\n                } else {\n                    const inRoomMessage = {\n                        message: message,\n                        messageID: messageID,\n                        sendTime: Date.now(),\n                        sender: _createPublicUser(_localCoreUser)\n                    }\n                    _inRoomMessageList.push(inRoomMessage);\n\n                    Object.keys(_onInRoomMessageSentCallbackMap).forEach(callbackID => {\n                        // callback may remove from map during room state chaging\n                        if (callbackID in _onInRoomMessageSentCallbackMap) {\n                            if (_onInRoomMessageSentCallbackMap[callbackID]) {\n                                _onInRoomMessageSentCallbackMap[callbackID](errorCode, messageID);\n                            }\n                        }\n                    });\n\n                    resolve(result);\n                }\n            }).catch((error) => {\n                zlogerror('SendInRoomMessage falied: ', error);\n                reject(error);\n            });\n        });\n    },\n    onInRoomMessageReceived(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onInRoomMessageReceivedCallbackMap) {\n                zloginfo('[onInRoomMessageReceived] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onInRoomMessageReceivedCallbackMap[callbackID];\n            }\n        } else {\n            _onInRoomMessageReceivedCallbackMap[callbackID] = callback;\n        }\n    },\n    onInRoomMessageSent(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onInRoomMessageSentCallbackMap) {\n                zloginfo('[onInRoomMessageSent] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onInRoomMessageSentCallbackMap[callbackID];\n            }\n        } else {\n            _onInRoomMessageSentCallbackMap[callbackID] = callback;\n        }\n    }\n}"],"mappings":"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"}