{"version":3,"names":["_isRoomConnected","_currentRoomState","_currentRoomID","_audioOutputType","_usingFrontFacingCamera","_onMicDeviceOnCallbackMap","_onCameraDeviceOnCallbackMap","_onRoomStateChangedCallbackMap","_onRequireNewTokenCallbackMap","_onUserJoinCallbackMap","_onUserLeaveCallbackMap","_onUserInfoUpdateCallbackMap","_onSoundLevelUpdateCallbackMap","_onSDKConnectedCallbackMap","_onAudioOutputDeviceTypeChangeCallbackMap","_onOnlySelfInRoomCallbackMap","_onUserCountOrPropertyChangedCallbackMap","_onAudioVideoAvailableCallbackMap","_onAudioVideoUnavailableCallbackMap","_onInRoomMessageReceivedCallbackMap","_onInRoomMessageSentCallbackMap","_localCoreUser","_createCoreUser","_streamCoreUserMap","_coreUserMap","_qualityUpdateLogCounter","_inRoomMessageList","_resetData","zloginfo","_resetDataForLeavingRoom","userID","userName","profileUrl","extendInfo","_createPublicUser","coreUser","isMicrophoneOn","isMicDeviceOn","isCameraOn","isCameraDeviceOn","soundLevel","viewID","viewFillMode","streamID","publisherQuality","joinTime","_isLocalUser","undefined","_setLocalUserInfo","userInfo","_onRoomUserUpdate","roomID","updateType","userList","userInfoList","forEach","user","_getStreamIDByUserID","Date","now","_notifyUserInfoUpdate","push","_tryStartPlayStream","_notifyUserCountOrPropertyChanged","ZegoChangedCountOrProperty","userAdd","Object","keys","callbackID","_tryStopPlayStream","userDelete","length","_onRoomStreamUpdate","streamList","users","stream","cameraStateUpdate","_onRemoteCameraStateUpdate","state","console","warn","isOn","_onAudioRouteChange","type","_onRemoteMicStateUpdate","microphoneStateUpdate","_onRoomStateChanged","reason","errorCode","extendedData","_tryStartPublishStream","_onInRoomMessageReceived","messageList","messages","msg","message","messageID","sendTime","sender","fromUser","_onRequireNewToken","token","ZegoExpressEngine","instance","renewToken","then","resolve","catch","error","zlogerror","reject","_registerEngineCallback","on","quality","split","_getUserIDByStreamID","soundLevels","_notifySoundLevelUpdate","audioRoute","remainTimeInSecond","_unregisterEngineCallback","off","values","sort","user1","user2","map","JSON","parse","stringify","_getPublishStreamID","startPublishingStream","startPreview","fillMode","_tryStopPublishStream","force","stopPublishingStream","stopPreview","startPlayingStream","stopPlayingStream","isRoomConnected","updateRenderingProperty","zlogwarning","onUserInfoUpdate","callback","onSoundLevelUpdate","onSDKConnected","connectSDK","appID","appSign","Promise","setEngineConfig","advancedConfig","engineProfile","scenario","createEngineWithProfile","engine","disconnectSDK","destroyEngine","finally","useFrontFacingCamera","isFrontFacing","useFrontCamera","isUsingFrontFacingCamera","enableSpeaker","enable","muteSpeaker","audioOutputDeviceType","turnMicDeviceOn","muteMicrophone","turnCameraDeviceOn","enableCamera","onMicDeviceOn","onCameraDeviceOn","setAudioOutputToSpeaker","isSpeaker","setAudioRouteToSpeaker","onAudioOutputDeviceTypeChange","setAudioConfig","config","setVideoConfig","onAudioVideoAvailable","onAudioVideoUnavailable","joinRoom","isUserStatusNotify","loginRoom","startSoundLevelMonitor","leaveRoom","logoutRoom","stopSoundLevelMonitor","onRoomStateChanged","onRequireNewToken","connectUser","disconnectUser","getLocalUserInfo","getUser","getAllUsers","a","b","publicUsers","onUserJoin","onUserLeave","onOnlySelfInRoom","onUserCountOrPropertyChanged","getInRoomMessages","sendInRoomMessage","sendBroadcastMessage","result","inRoomMessage","onInRoomMessageReceived","onInRoomMessageSent"],"sources":["ZegoUIKitInternal.js"],"sourcesContent":["import ZegoExpressEngine from 'zego-express-engine-reactnative';\nimport { zlogerror, zloginfo, zlogwarning } from '../../utils/logger';\nimport ZegoChangedCountOrProperty from './ZegoChangedCountOrProperty'\n\nvar _isRoomConnected = false;\nvar _currentRoomState = 7; // Logout\nvar _currentRoomID = '';\nvar _audioOutputType = 0;\nvar _usingFrontFacingCamera = true;\n\nvar _onMicDeviceOnCallbackMap = {};\nvar _onCameraDeviceOnCallbackMap = {};\nvar _onRoomStateChangedCallbackMap = {};\nvar _onRequireNewTokenCallbackMap = {};\nvar _onUserJoinCallbackMap = {};\nvar _onUserLeaveCallbackMap = {};\nvar _onUserInfoUpdateCallbackMap = {};\nvar _onSoundLevelUpdateCallbackMap = {};\nvar _onSDKConnectedCallbackMap = {};\nvar _onAudioOutputDeviceTypeChangeCallbackMap = {};\nvar _onOnlySelfInRoomCallbackMap = {};\nvar _onUserCountOrPropertyChangedCallbackMap = {};\nvar _onAudioVideoAvailableCallbackMap = {};\nvar _onAudioVideoUnavailableCallbackMap = {};\nvar _onInRoomMessageReceivedCallbackMap = {};\nvar _onInRoomMessageSentCallbackMap = {};\n\nvar _localCoreUser = _createCoreUser('', '', '', {});\nvar _streamCoreUserMap = {}; // <streamID, CoreUser>\nvar _coreUserMap = {}; // <userID, CoreUser>\nvar _qualityUpdateLogCounter = 0;\n\nvar _inRoomMessageList = [];\n\nfunction _resetData() {\n    zloginfo('Reset all data.')\n    _localCoreUser = _createCoreUser('', '', '', {});\n    _streamCoreUserMap = {};\n    _coreUserMap = {};\n    _currentRoomID = '';\n    _currentRoomState = 7;\n    _isRoomConnected = false;\n    _audioOutputType = 0;\n    _inRoomMessageList = [];\n}\n\nfunction _resetDataForLeavingRoom() {\n    zloginfo('Reset data for leaving room.')\n    _streamCoreUserMap = {};\n    _coreUserMap = {};\n    _currentRoomID = '';\n    _currentRoomState = 7;\n    _isRoomConnected = false;\n    const { userID, userName, profileUrl, extendInfo } = _localCoreUser;\n    _localCoreUser = _createCoreUser(userID, userName, profileUrl, extendInfo);\n    _coreUserMap[_localCoreUser.userID] = _localCoreUser;\n    _inRoomMessageList = [];\n}\n\nfunction _createPublicUser(coreUser) {\n    return {\n        userID: coreUser.userID,\n        userName: coreUser.userName,\n        extendInfo: coreUser.extendInfo,\n        isMicrophoneOn: coreUser.isMicDeviceOn,\n        isCameraOn: coreUser.isCameraDeviceOn,\n        soundLevel: coreUser.soundLevel\n    }\n}\nfunction _createCoreUser(userID, userName, profileUrl, extendInfo) {\n    return {\n        userID: userID,\n        userName: userName,\n        profileUrl: profileUrl,\n        extendInfo: extendInfo,\n        viewID: -1,\n        viewFillMode: 1,\n        streamID: '',\n        isMicDeviceOn: false,\n        isCameraDeviceOn: false,\n        publisherQuality: 0,\n        soundLevel: 0,\n        joinTime: 0,\n    }\n}\nfunction _isLocalUser(userID) {\n    return userID === undefined || userID === '' || _localCoreUser.userID === userID;\n}\nfunction _setLocalUserInfo(userInfo) {\n    _localCoreUser = _createCoreUser(userInfo.userID, userInfo.userName, userInfo.profileUrl, userInfo.extendInfo);\n    _coreUserMap[userInfo.userID] = _localCoreUser;\n}\n\nfunction _onRoomUserUpdate(roomID, updateType, userList) {\n    // No need for roomID, does not support multi-room right now.\n    const userInfoList = [];\n    if (updateType == 0) {\n        userList.forEach(user => {\n            if (!(user.userID in _coreUserMap)) {\n                const coreUser = _createCoreUser(user.userID, user.userName);\n                _coreUserMap[user.userID] = coreUser;\n            }\n            const streamID = _getStreamIDByUserID(user.userID);\n            if (streamID in _streamCoreUserMap) {\n                _coreUserMap[user.userID].streamID = streamID;\n            }\n            _coreUserMap[user.userID].joinTime = Date.now();\n            _notifyUserInfoUpdate(_coreUserMap[user.userID]);\n\n            userInfoList.push(_createPublicUser(_coreUserMap[user.userID]));\n\n            // Start after user insert into list\n            _tryStartPlayStream(user.userID);\n        });\n        _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.userAdd);\n\n        zloginfo(\"User Join: \", userInfoList)\n        Object.keys(_onUserJoinCallbackMap).forEach(callbackID => {\n            if (_onUserJoinCallbackMap[callbackID]) {\n                _onUserJoinCallbackMap[callbackID](userInfoList);\n            }\n        });\n    } else {\n        userList.forEach(user => {\n            if (user.userID in _coreUserMap) {\n                const coreUser = _coreUserMap[user.userID];\n                const userInfo = {\n                    userID: coreUser.userID,\n                    userName: coreUser.userName,\n                    profileUrl: coreUser.profileUrl,\n                    extendInfo: coreUser.extendInfo\n                }\n                userInfoList.push(userInfo);\n\n                // Stop play stream before remove user list\n                _tryStopPlayStream(coreUser.userID, true);\n                delete _coreUserMap[user.userID];\n            }\n        });\n        _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.userDelete);\n        zloginfo(\"User Leave: \", userInfoList)\n        Object.keys(_onUserLeaveCallbackMap).forEach(callbackID => {\n            if (_onUserLeaveCallbackMap[callbackID]) {\n                _onUserLeaveCallbackMap[callbackID](userInfoList);\n            }\n        })\n        if (Object.keys(_coreUserMap).length <= 1) {\n            Object.keys(_onOnlySelfInRoomCallbackMap).forEach(callbackID => {\n                if (_onOnlySelfInRoomCallbackMap[callbackID]) {\n                    _onOnlySelfInRoomCallbackMap[callbackID]();\n                }\n            })\n        }\n    }\n}\nfunction _onRoomStreamUpdate(roomID, updateType, streamList) {\n    zloginfo('_onRoomStreamUpdate: ', roomID, updateType, streamList)\n    var users = [];\n    if (updateType == 0) { // Add\n        streamList.forEach(stream => {\n            const userID = stream.user.userID;\n            const userName = stream.user.userName;\n            const streamID = stream.streamID;\n            if (userID in _coreUserMap) {\n                _coreUserMap[userID].streamID = streamID;\n                _streamCoreUserMap[streamID] = _coreUserMap[userID];\n                _notifyUserInfoUpdate(_coreUserMap[userID]);\n                _tryStartPlayStream(userID);\n\n                users.push(_coreUserMap[userID]);\n            } else {\n                _streamCoreUserMap[streamID] = _createCoreUser(userID, userName, '', {});\n                _streamCoreUserMap[streamID].streamID = streamID;\n\n                _coreUserMap[userID] = _streamCoreUserMap[streamID];\n\n                users.push(_streamCoreUserMap[streamID]);\n            }\n        })\n\n        Object.keys(_onAudioVideoAvailableCallbackMap).forEach(callbackID => {\n            if (_onAudioVideoAvailableCallbackMap[callbackID]) {\n                _onAudioVideoAvailableCallbackMap[callbackID](users);\n            }\n        })\n    } else {\n        streamList.forEach(stream => {\n            const userID = stream.user.userID;\n            const streamID = stream.streamID;\n            if (userID in _coreUserMap) {\n                _tryStopPlayStream(userID, true);\n                _coreUserMap[userID].isCameraDeviceOn = false;\n                _coreUserMap[userID].isMicDeviceOn = false;\n                _coreUserMap[userID].streamID = '';\n                _notifyUserInfoUpdate(_coreUserMap[userID]);\n\n                users.push(_coreUserMap[userID]);\n\n                delete _streamCoreUserMap[streamID];\n            }\n        })\n        _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.cameraStateUpdate);\n\n        Object.keys(_onAudioVideoUnavailableCallbackMap).forEach(callbackID => {\n            if (_onAudioVideoUnavailableCallbackMap[callbackID]) {\n                _onAudioVideoUnavailableCallbackMap[callbackID](users);\n            }\n        })\n    }\n}\nfunction _onRemoteCameraStateUpdate(userID, state) {\n    console.warn('>>>>>>>>>>>>> _onRemoteCameraStateUpdate', userID, state);\n    if (userID in _coreUserMap) {\n        const isOn = state == 0; // 0 for Open\n        _coreUserMap[userID].isCameraDeviceOn = isOn;\n        _notifyUserInfoUpdate(_coreUserMap[userID]);\n        _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.cameraStateUpdate);\n\n        Object.keys(_onCameraDeviceOnCallbackMap).forEach(callbackID => {\n            if (_onCameraDeviceOnCallbackMap[callbackID]) {\n                _onCameraDeviceOnCallbackMap[callbackID](userID, isOn);\n            }\n        });\n\n        if (userID != _localCoreUser.userID) {\n            if (isOn) {\n                _tryStartPlayStream(userID);\n            }\n        }\n    }\n}\nfunction _onAudioRouteChange(type) {\n    Object.keys(_onAudioOutputDeviceTypeChangeCallbackMap).forEach(callbackID => {\n        if (_onAudioOutputDeviceTypeChangeCallbackMap[callbackID]) {\n            _onAudioOutputDeviceTypeChangeCallbackMap[callbackID](type);\n        }\n    });\n    _audioOutputType = type;\n}\nfunction _onRemoteMicStateUpdate(userID, state) {\n    console.warn('>>>>>>>>>>>>> _onRemoteMicStateUpdate', userID, state);\n    if (userID in _coreUserMap) {\n        const isOn = state == 0; // 0 for Open\n        _coreUserMap[userID].isMicDeviceOn = isOn;\n        _notifyUserInfoUpdate(_coreUserMap[userID]);\n        _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.microphoneStateUpdate);\n\n        Object.keys(_onMicDeviceOnCallbackMap).forEach(callbackID => {\n            if (_onMicDeviceOnCallbackMap[callbackID]) {\n                _onMicDeviceOnCallbackMap[callbackID](userID, isOn);\n            }\n        });\n\n        if (userID != _localCoreUser.userID) {\n            if (isOn) {\n                _tryStartPlayStream(userID);\n            }\n        }\n    }\n}\nfunction _onRoomStateChanged(roomID, reason, errorCode, extendedData) {\n    zloginfo('Room state chaged: ', roomID, reason, errorCode, extendedData);\n    // Not support multi-room right now\n    if (reason == 1 || reason == 4) { // Logined || Reconnected\n        _isRoomConnected = true;\n        _tryStartPublishStream();\n    } else {\n        _isRoomConnected = false;\n    }\n    _currentRoomState = reason;\n\n    Object.keys(_onRoomStateChangedCallbackMap).forEach(callbackID => {\n        // callback may remove from map during room state chaging\n        if (callbackID in _onRoomStateChangedCallbackMap) {\n            if (_onRoomStateChangedCallbackMap[callbackID]) {\n                _onRoomStateChangedCallbackMap[callbackID](reason, errorCode, extendedData);\n            }\n        }\n    });\n}\nfunction _onInRoomMessageReceived(roomID, messageList) {\n    zloginfo('Received in room message: ', roomID, messageList.length);\n    var messages = [];\n    messageList.forEach(msg => {\n        const message = {\n            message: msg.message,\n            messageID: msg.messageID,\n            sendTime: msg.sendTime,\n            sender: _createPublicUser(_coreUserMap[msg.fromUser.userID])\n        }\n        messages.push(message);\n        _inRoomMessageList.push(message);\n    })\n\n    Object.keys(_onInRoomMessageReceivedCallbackMap).forEach(callbackID => {\n        // callback may remove from map during room state chaging\n        if (callbackID in _onInRoomMessageReceivedCallbackMap) {\n            if (_onInRoomMessageReceivedCallbackMap[callbackID]) {\n                _onInRoomMessageReceivedCallbackMap[callbackID](messages);\n            }\n        }\n    });\n}\nfunction _onRequireNewToken() {\n    Object.keys(_onRequireNewTokenCallbackMap).forEach(callbackID => {\n        if (callbackID in _onRequireNewTokenCallbackMap) {\n            if (_onRequireNewTokenCallbackMap[callbackID]) {\n                const token = _onRequireNewTokenCallbackMap[callbackID]();\n                if (token) {\n                    ZegoExpressEngine.instance().renewToken(_currentRoomID, token).then(() => {\n                        resolve();\n                    }).catch((error)=>{\n                        zlogerror('Renew token failed: ', error);\n                        reject(error);\n                    })\n                } else {\n                    zlogerror('Renew token failed: the returned token is abnormal');\n                }\n            }\n        }\n    });\n}\nfunction _registerEngineCallback() {\n    zloginfo('Register callback for ZegoExpressEngine...')\n    ZegoExpressEngine.instance().on(\n        'roomUserUpdate',\n        (roomID, updateType, userList) => {\n            zloginfo('[roomUserUpdate callback]', roomID, updateType, userList);\n            _onRoomUserUpdate(roomID, updateType, userList);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'roomStreamUpdate',\n        (roomID, updateType, streamList) => {\n            zloginfo('[roomStreamUpdate callback]', roomID, updateType, streamList);\n            _onRoomStreamUpdate(roomID, updateType, streamList);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'publisherQualityUpdate',\n        (streamID, quality) => {\n            if (_qualityUpdateLogCounter % 10 == 0) {\n                _qualityUpdateLogCounter = 0;\n                zloginfo('[publisherQualityUpdate callback]', streamID, quality);\n            }\n            _qualityUpdateLogCounter++;\n            if (streamID.split('_')[2] === 'main') {\n                _localCoreUser.publisherQuality = quality;\n                _coreUserMap[_localCoreUser.userID].publisherQuality = quality;\n                _notifyUserInfoUpdate(_coreUserMap[_localCoreUser.userID]);\n            }\n        },\n    );\n    // ZegoExpressEngine.instance().on(\n    //     'publisherStateUpdate',\n    //     (streamID, state, errorCode, extendedData) => {\n    //         zloginfo('publisherStateUpdate#################', streamID, state, errorCode)\n    //     },\n    // );\n    ZegoExpressEngine.instance().on(\n        'playerQualityUpdate',\n        (streamID, quality) => {\n            if (_qualityUpdateLogCounter % 10 == 0) {\n                zloginfo('[playerQualityUpdate callback]', streamID, quality);\n            }\n            // TODO\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'remoteCameraStateUpdate',\n        (streamID, state) => {\n            zloginfo('[remoteCameraStateUpdate callback]', streamID, state);\n            _onRemoteCameraStateUpdate(_getUserIDByStreamID(streamID), state);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'remoteMicStateUpdate',\n        (streamID, state) => {\n            zloginfo('[remoteMicStateUpdate callback]', streamID, state);\n            _onRemoteMicStateUpdate(_getUserIDByStreamID(streamID), state);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'playerStateUpdate',\n        (streamID, state, errorCode, extendedData) => {\n            zloginfo('[playerStateUpdate callback]', streamID, state, errorCode, extendedData);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'remoteSoundLevelUpdate',\n        (soundLevels) => {\n            // {streamID, soundLavel} value from 0.0 to 100.0\n            // zloginfo('[remoteSoundLevelUpdate callback]', soundLevels);\n            Object.keys(soundLevels).forEach(streamID => {\n                const userID = _getUserIDByStreamID(streamID);\n                if (userID in _coreUserMap) {\n                    _coreUserMap[userID].soundLevel = soundLevels[streamID];\n                    _notifySoundLevelUpdate(userID, soundLevels[streamID]);\n                }\n            })\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'capturedSoundLevelUpdate',\n        (soundLevel) => {\n            if (_localCoreUser.userID === \"\" || !(_localCoreUser.userID in _coreUserMap)) {\n                return;\n            }\n            _localCoreUser.soundLevel = soundLevel;\n            _coreUserMap[_localCoreUser.userID].soundLevel = soundLevel;\n            _notifySoundLevelUpdate(_localCoreUser.userID, soundLevel);\n            // zloginfo('capturedSoundLevelUpdate', soundLevel)\n        },\n    );\n    // https://doc-en-api.zego.im/ReactNative/enums/_zegoexpressdefines_.zegoroomstatechangedreason.html\n    ZegoExpressEngine.instance().on(\n        'roomStateChanged',\n        (roomID, reason, errorCode, extendedData) => {\n            zloginfo('[roomStateChanged callback]', roomID, reason, errorCode, extendedData);\n            _onRoomStateChanged(roomID, reason, errorCode, extendedData);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'audioRouteChange',\n        (audioRoute) => {\n            zloginfo('[audioRouteChange callback]', audioRoute);\n            _onAudioRouteChange(audioRoute);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'IMRecvBroadcastMessage',\n        (roomID, messageList) => {\n            _onInRoomMessageReceived(roomID, messageList);\n        },\n    );\n    ZegoExpressEngine.instance().on(\n        'roomTokenWillExpire',\n        (roomID, remainTimeInSecond) => {\n            _onRequireNewToken();\n        }\n    );\n}\nfunction _unregisterEngineCallback() {\n    zloginfo('Unregister callback from ZegoExpressEngine...');\n    ZegoExpressEngine.instance().off('roomUserUpdate');\n    ZegoExpressEngine.instance().off('roomStreamUpdate');\n    ZegoExpressEngine.instance().off('publisherQualityUpdate');\n    ZegoExpressEngine.instance().off('playerQualityUpdate');\n    ZegoExpressEngine.instance().off('remoteCameraStateUpdate');\n    ZegoExpressEngine.instance().off('remoteMicStateUpdate');\n    ZegoExpressEngine.instance().off('playerStateUpdate');\n    ZegoExpressEngine.instance().off('remoteSoundLevelUpdate');\n    ZegoExpressEngine.instance().off('capturedSoundLevelUpdate');\n    ZegoExpressEngine.instance().off('roomStateChanged');\n    ZegoExpressEngine.instance().off('audioRouteChange');\n    ZegoExpressEngine.instance().off('IMRecvBroadcastMessage');\n}\nfunction _notifyUserCountOrPropertyChanged(type) {\n    const msg = [\"\", \"user add\", \"user delete\", \"mic update\", \"camera update\"];\n    const userList = Object.values(_coreUserMap).sort((user1, user2) => {\n        return user2.joinTime - user1.joinTime ;\n    }).map(user => _createPublicUser(user));\n    zloginfo(`_notifyUserCountOrPropertyChanged ${msg[type]}`, userList);\n    Object.keys(_onUserCountOrPropertyChangedCallbackMap).forEach(callbackID => {\n        if (_onUserCountOrPropertyChangedCallbackMap[callbackID]) {\n            _onUserCountOrPropertyChangedCallbackMap[callbackID](JSON.parse(JSON.stringify(userList)));\n        }\n    })\n}\n\n// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Stream Handling <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nfunction _getUserIDByStreamID(streamID) {\n    // StreamID format: roomid_userid_main\n    for (const userID in _coreUserMap) {\n        if ( _coreUserMap[userID].streamID == streamID) {\n            return userID;\n        }\n    }\n    return ''\n}\nfunction _getPublishStreamID() {\n    return _currentRoomID + '_' + _localCoreUser.userID + '_main';\n}\nfunction _getStreamIDByUserID(userID) {\n    return _currentRoomID + '_' + userID + '_main';\n}\nfunction _tryStartPublishStream() {\n    if (_localCoreUser.isMicDeviceOn || _localCoreUser.isCameraDeviceOn) {\n        zloginfo('_tryStartPublishStream', _localCoreUser.isMicDeviceOn, _localCoreUser.isCameraDeviceOn, _localCoreUser.streamID);\n        if (!_localCoreUser.streamID) {\n            return;\n        }\n        ZegoExpressEngine.instance().startPublishingStream(_localCoreUser.streamID).then(() => {\n            if ((_localCoreUser.streamID in _streamCoreUserMap)) {\n                _streamCoreUserMap[_localCoreUser.streamID] = _localCoreUser;\n\n                Object.keys(_onAudioVideoAvailableCallbackMap).forEach(callbackID => {\n                    if (_onAudioVideoAvailableCallbackMap[callbackID]) {\n                        _onAudioVideoAvailableCallbackMap[callbackID]([_localCoreUser]);\n                    }\n                })\n            }\n        });\n        zloginfo('ZegoExpressEngine startPreview:', _localCoreUser);\n        if (_localCoreUser.viewID > 0) {\n            ZegoExpressEngine.instance().startPreview({\n                'reactTag': _localCoreUser.viewID,\n                'viewMode': _localCoreUser.fillMode,\n                'backgroundColor': 0\n            }).catch((error) => {\n                zlogerror(error);\n            });\n        }\n    }\n}\nfunction _tryStopPublishStream(force = false) {\n    if (!_localCoreUser.isMicDeviceOn && !_localCoreUser.isCameraDeviceOn) {\n        zloginfo('stopPublishStream')\n        ZegoExpressEngine.instance().stopPublishingStream();\n        ZegoExpressEngine.instance().stopPreview();\n        if ((_localCoreUser.streamID in _streamCoreUserMap)) {\n            delete _streamCoreUserMap[_localCoreUser.streamID];\n\n            Object.keys(_onAudioVideoUnavailableCallbackMap).forEach(callbackID => {\n                if (_onAudioVideoUnavailableCallbackMap[callbackID]) {\n                    _onAudioVideoUnavailableCallbackMap[callbackID]([_localCoreUser]);\n                }\n            })\n        }\n    }\n}\nfunction _tryStartPlayStream(userID) {\n    if (userID in _coreUserMap) {\n        const user = _coreUserMap[userID];\n        zloginfo('_tryStartPlayStream: ', user)\n        if (user.streamID !== '') {\n            if (user.viewID > 0) {\n                ZegoExpressEngine.instance().startPlayingStream(user.streamID, {\n                    'reactTag': user.viewID,\n                    'viewMode': user.fillMode,\n                    'backgroundColor': 0\n                });\n            } else {\n                ZegoExpressEngine.instance().startPlayingStream(user.streamID);\n            }\n        }\n    }\n}\nfunction _tryStopPlayStream(userID, force = false) {\n    if (userID in _coreUserMap) {\n        const user = _coreUserMap[userID];\n        if (force || (!user.isMicDeviceOn && !user.isCameraDeviceOn)) {\n            ZegoExpressEngine.instance().stopPlayingStream(user.streamID);\n        }\n    }\n}\nfunction _notifyUserInfoUpdate(userInfo) {\n    Object.keys(_onUserInfoUpdateCallbackMap).forEach(callbackID => {\n        if (_onUserInfoUpdateCallbackMap[callbackID]) {\n            _onUserInfoUpdateCallbackMap[callbackID](userInfo);\n        }\n    })\n}\nfunction _notifySoundLevelUpdate(userID, soundLevel) {\n    Object.keys(_onSoundLevelUpdateCallbackMap).forEach(callbackID => {\n        if (_onSoundLevelUpdateCallbackMap[callbackID]) {\n            _onSoundLevelUpdateCallbackMap[callbackID](userID, soundLevel);\n        }\n    });\n}\n\nexport default {\n    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Internal <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n    isRoomConnected() {\n        return _isRoomConnected;\n    },\n    updateRenderingProperty(userID, viewID, fillMode) {\n        zloginfo('updateRenderingProperty: ', userID, viewID, fillMode, '<<<<<<<<<<<<<<<<<<<<<<<<<<')\n        if (userID === undefined) {\n            zlogwarning('updateRenderingProperty: ignore undifine useid. Use empty string for local user.')\n            return;\n        }\n        if (userID === '') {\n            userID = _localCoreUser.userID;\n        }\n        if (userID in _coreUserMap) {\n            _coreUserMap[userID].viewID = viewID;\n            _coreUserMap[userID].fillMode = fillMode;\n            _notifyUserInfoUpdate(_coreUserMap[userID]);\n\n            if (_localCoreUser.userID == userID) {\n                _localCoreUser.viewID = viewID;\n                _localCoreUser.fillMode = fillMode;\n                if (viewID > 0) {\n                    _tryStartPublishStream();\n                } else {\n                    _tryStopPublishStream();\n                }\n            } else {\n                // Check if stream is ready to play for remote user\n                if (viewID > 0) {\n                    _tryStartPlayStream(userID);\n                }\n            }\n        }\n    },\n    onUserInfoUpdate(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onUserInfoUpdateCallbackMap) {\n                zloginfo('[onUserInfoUpdate] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onUserInfoUpdateCallbackMap[callbackID];\n            }\n        } else {\n            _onUserInfoUpdateCallbackMap[callbackID] = callback;\n        }\n    },\n    onSoundLevelUpdate(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onSoundLevelUpdateCallbackMap) {\n                zloginfo('[onSoundLevelUpdate] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onSoundLevelUpdateCallbackMap[callbackID];\n            }\n        } else {\n            _onSoundLevelUpdateCallbackMap[callbackID] = callback;\n        }\n    },\n    onSDKConnected(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onSDKConnectedCallbackMap) {\n                zloginfo('[onSDKConnected] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onSDKConnectedCallbackMap[callbackID];\n            }\n        } else {\n            _onSDKConnectedCallbackMap[callbackID] = callback;\n        }\n    },\n    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> SDK <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n    connectSDK(appID, appSign, userInfo) {\n        return new Promise((resolve, reject) => {\n            // set advancedConfig to monitor remote user's device changed\n            ZegoExpressEngine.setEngineConfig({\n                advancedConfig: {\n                    'notify_remote_device_unknown_status': 'true',\n                    'notify_remote_device_init_status': 'true',\n                }\n            });\n            const engineProfile = {\n                appID: appID,\n                appSign: appSign,\n                scenario: 0,\n            }\n            ZegoExpressEngine.createEngineWithProfile(engineProfile).then((engine) => {\n                zloginfo('Create ZegoExpressEngine succeed!');\n\n                _unregisterEngineCallback();\n                _registerEngineCallback();\n\n                _setLocalUserInfo(userInfo);\n\n                Object.keys(_onSDKConnectedCallbackMap).forEach(callbackID => {\n                    // TODO cause  WARN  Possible Unhandled Promise Rejection (id: 56)\n                    if (_onSDKConnectedCallbackMap[callbackID]) {\n                        _onSDKConnectedCallbackMap[callbackID]();\n                    }\n                });\n                resolve();\n            }).catch((error) => {\n                zlogerror('Create ZegoExpressEngine Failed: ', error);\n                reject(error);\n            });\n        });\n    },\n    disconnectSDK() {\n        return new Promise((resolve, reject) => {\n            if (ZegoExpressEngine.instance()) {\n                ZegoExpressEngine.destroyEngine().then(() => {\n                    zloginfo('Destroy ZegoExpressEngine finished!')\n                    resolve();\n                }).catch((error) => {\n                    zlogerror('Destroy ZegoExpressEngine failed!', error);\n                    reject(error);\n                }).finally(() => {\n                    _resetData();\n                })\n            } else {\n                resolve();\n            }\n        });\n    },\n\n    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Audio Video <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n    useFrontFacingCamera(isFrontFacing) {\n        zloginfo('Use front facing camera: ', isFrontFacing);\n        _usingFrontFacingCamera = isFrontFacing;\n        return ZegoExpressEngine.instance().useFrontCamera(isFrontFacing, 0);\n    },\n    isUsingFrontFacingCamera() {\n        return _usingFrontFacingCamera;\n    },\n    isMicDeviceOn(userID) {\n        if (!userID) {\n            return _localCoreUser.isMicDeviceOn;\n        }\n        else if (userID in _coreUserMap) {\n            return _coreUserMap[userID].isMicDeviceOn;\n        } else {\n            zlogwarning('Can not check mic device is on for user[', userID, '], because no record!');\n            return true;\n        }\n    },\n    isCameraDeviceOn(userID) {\n        if (!userID) {\n            return _localCoreUser.isCameraDeviceOn;\n        }\n        else if (userID in _coreUserMap) {\n            return _coreUserMap[userID].isCameraDeviceOn;\n        } else {\n            zlogwarning('No record for user: ', userID, '. Can not check camera device is on.')\n            return true;\n        }\n    },\n    enableSpeaker(enable) {\n        // TODO\n        return new Promise((resolve, reject) => {\n            if (!_isRoomConnected) {\n                zlogerror('You are not connect to any room.')\n                reject();\n            } else {\n                ZegoExpressEngine.instance().muteSpeaker(!enable);\n                resolve();\n            }\n        });\n    },\n    audioOutputDeviceType() {\n        return _audioOutputType;\n    },\n    turnMicDeviceOn(userID, on) {\n        return new Promise((resolve, reject) => {\n            if (_isLocalUser(userID)) {\n                zloginfo('turnMicDeviceOn: ', _localCoreUser.userID, on);\n                ZegoExpressEngine.instance().muteMicrophone(!on);\n\n                _onRemoteMicStateUpdate(_localCoreUser.userID, on ? 0 : 10); // 0 for open, 10 for mute\n\n                _localCoreUser.isMicDeviceOn = on;\n                _coreUserMap[_localCoreUser.userID].isMicDeviceOn = on;\n                _notifyUserInfoUpdate(_localCoreUser);\n                _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.microphoneStateUpdate);\n\n                if (on) {\n                    _tryStartPublishStream();\n                } else {\n                    _tryStopPublishStream();\n                }\n                resolve();\n            } else {\n                // TODO\n                zlogwarning(\"Can not turn on other's mic device on this version\");\n                reject();\n            }\n        });\n    },\n    turnCameraDeviceOn(userID, on) {\n        return new Promise((resolve, reject) => {\n            if (_isLocalUser(userID)) {\n                // Default to Main Channel\n                zloginfo('turnCameraDeviceOn: ', _localCoreUser.userID, on);\n                ZegoExpressEngine.instance().enableCamera(on, 0);\n\n                _onRemoteCameraStateUpdate(_localCoreUser.userID, on ? 0 : 10); // 0 for open, 10 for mute\n\n                _localCoreUser.isCameraDeviceOn = on;\n                // if (!on) {\n                //     _localCoreUser.viewID = -1;\n                // }\n                _coreUserMap[_localCoreUser.userID] = _localCoreUser;\n                _notifyUserInfoUpdate(_localCoreUser);\n                _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.cameraStateUpdate);\n\n                if (on) {\n                    _tryStartPublishStream();\n                } else {\n                    _tryStopPublishStream();\n                }\n                resolve();\n            } else {\n                // TODO\n                zlogwarning(\"Can not turn on other's camera device on this version\");\n                reject();\n            }\n        });\n    },\n    onMicDeviceOn(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onMicDeviceOnCallbackMap) {\n                zloginfo('[onMicDeviceOn] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onMicDeviceOnCallbackMap[callbackID];\n            }\n        } else {\n            _onMicDeviceOnCallbackMap[callbackID] = callback;\n        }\n    },\n    onCameraDeviceOn(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onCameraDeviceOnCallbackMap) {\n                zloginfo('[onCameraDeviceOn] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onCameraDeviceOnCallbackMap[callbackID];\n            }\n        } else {\n            _onCameraDeviceOnCallbackMap[callbackID] = callback;\n        }\n    },\n    setAudioOutputToSpeaker(isSpeaker) {\n        ZegoExpressEngine.instance().setAudioRouteToSpeaker(isSpeaker);\n    },\n    onAudioOutputDeviceTypeChange(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onAudioOutputDeviceTypeChangeCallbackMap) {\n                zloginfo('[onAudioOutputDeviceTypeChange] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onAudioOutputDeviceTypeChangeCallbackMap[callbackID];\n            }\n        } else {\n            _onAudioOutputDeviceTypeChangeCallbackMap[callbackID] = callback;\n        }\n    },\n    setAudioConfig(config) {\n        // TODO\n    },\n    setVideoConfig(config) {\n        // TODO\n    },\n    onAudioVideoAvailable(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onAudioVideoAvailableCallbackMap) {\n                zloginfo('[onAudioVideoAvailable] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onAudioVideoAvailableCallbackMap[callbackID];\n            }\n        } else {\n            _onAudioVideoAvailableCallbackMap[callbackID] = callback;\n        }\n    },\n    onAudioVideoUnavailable(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onAudioVideoUnavailableCallbackMap) {\n                zloginfo('[onAudioVideoUnavailable] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onAudioVideoUnavailableCallbackMap[callbackID];\n            }\n        } else {\n            _onAudioVideoUnavailableCallbackMap[callbackID] = callback;\n        }\n    },\n\n    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Room <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n    joinRoom(roomID, token) {\n        return new Promise((resolve, reject) => {\n            const user = { userID: _localCoreUser.userID, userName: _localCoreUser.userName };\n            const config = { isUserStatusNotify: true }\n            token && (config.token = token);\n            _currentRoomID = roomID;\n            ZegoExpressEngine.instance().loginRoom(roomID, user, config).then(() => {\n                zloginfo('Join room success.', user)\n                ZegoExpressEngine.instance().startSoundLevelMonitor();\n\n                _localCoreUser.streamID = _getPublishStreamID();\n                _coreUserMap[_localCoreUser.userID] = _localCoreUser;\n                _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.userAdd);\n                resolve();\n            }).catch((error) => {\n                zlogerror('Join room falied: ', error);\n                _currentRoomID = '';\n                reject(error);\n            });\n        });\n    },\n    leaveRoom() {\n        return new Promise((resolve, reject) => {\n            if (_currentRoomID == '') {\n                zlogwarning('You are not join in any room, no need to leave room.');\n                resolve();\n            } else {\n                zloginfo('leaveRoom: ', _currentRoomID)\n                ZegoExpressEngine.instance().logoutRoom(_currentRoomID).then(() => {\n                    zloginfo('Leave room succeed.')\n                    ZegoExpressEngine.instance().stopSoundLevelMonitor();\n                    _notifyUserCountOrPropertyChanged(ZegoChangedCountOrProperty.userDelete);\n                    _resetDataForLeavingRoom();\n                    resolve();\n                }).catch((error) => {\n                    zlogerror('Leave room failed: ', error);\n                    reject(error);\n                });\n            }\n        });\n    },\n    onRoomStateChanged(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onRoomStateChangedCallbackMap) {\n                zloginfo('[onRoomStateChanged] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onRoomStateChangedCallbackMap[callbackID];\n            }\n        } else {\n            _onRoomStateChangedCallbackMap[callbackID] = callback;\n        }\n    },\n    onRequireNewToken(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onRequireNewTokenCallbackMap) {\n                zloginfo('[onRequireNewToken] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onRequireNewTokenCallbackMap[callbackID];\n            }\n        } else {\n            _onRequireNewTokenCallbackMap[callbackID] = callback;\n        }\n    },\n\n    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> User <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n    connectUser(userID, userName) {\n        _setLocalUserInfo({ userID: userID, userName: userName });\n        // TODO ZIM login\n    },\n    disconnectUser() {\n        delete _coreUserMap[_localCoreUser.userID];\n        _localCoreUser = _createCoreUser('', '', '', {});\n        // TODO ZIM logout\n    },\n    getLocalUserInfo() {\n        return _localCoreUser;\n    },\n    getUser(userID) {\n        return _coreUserMap[userID];\n    },\n    getAllUsers() {\n        const users = Object.values(_coreUserMap);\n        users.sort((a, b) => { return a.joinTime > b.joinTime })\n        var publicUsers = [];\n        users.forEach(user => {\n            publicUsers.push(_createPublicUser(user));\n        })\n        return publicUsers;\n    },\n    onUserJoin(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onUserJoinCallbackMap) {\n                zloginfo('[onUserJoin] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onUserJoinCallbackMap[callbackID];\n            }\n        } else {\n            _onUserJoinCallbackMap[callbackID] = callback;\n        }\n    },\n    onUserLeave(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onUserLeaveCallbackMap) {\n                zloginfo('[onUserLeave] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onUserLeaveCallbackMap[callbackID];\n            }\n        } else {\n            _onUserLeaveCallbackMap[callbackID] = callback;\n        }\n    },\n    onOnlySelfInRoom(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onOnlySelfInRoomCallbackMap) {\n                zloginfo('[onOnlySelfInRoom] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onOnlySelfInRoomCallbackMap[callbackID];\n            }\n        } else {\n            _onOnlySelfInRoomCallbackMap[callbackID] = callback;\n        }\n    },\n    onUserCountOrPropertyChanged(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onUserCountOrPropertyChangedCallbackMap) {\n                zloginfo('[onUserCountOrPropertyChanged] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onUserCountOrPropertyChangedCallbackMap[callbackID];\n            }\n        } else {\n            _onUserCountOrPropertyChangedCallbackMap[callbackID] = callback;\n        }\n    },\n\n    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Message <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n    getInRoomMessages() {\n        return _inRoomMessageList;\n    },\n    sendInRoomMessage(message) {\n        return new Promise((resolve, reject) => {\n            ZegoExpressEngine.instance().sendBroadcastMessage(_currentRoomID, message).then((result) => {\n                zloginfo('SendInRoomMessage finished.', result);\n                const { errorCode, messageID } = result;\n                if (errorCode > 0) {\n                    reject(errorCode)\n                } else {\n                    const inRoomMessage = {\n                        message: message,\n                        messageID: messageID,\n                        sendTime: Date.now(),\n                        sender: _createPublicUser(_localCoreUser)\n                    }\n                    _inRoomMessageList.push(inRoomMessage);\n\n                    Object.keys(_onInRoomMessageSentCallbackMap).forEach(callbackID => {\n                        // callback may remove from map during room state chaging\n                        if (callbackID in _onInRoomMessageSentCallbackMap) {\n                            if (_onInRoomMessageSentCallbackMap[callbackID]) {\n                                _onInRoomMessageSentCallbackMap[callbackID](errorCode, messageID);\n                            }\n                        }\n                    });\n\n                    resolve(result);\n                }\n            }).catch((error) => {\n                zlogerror('SendInRoomMessage falied: ', error);\n                reject(error);\n            });\n        });\n    },\n    onInRoomMessageReceived(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onInRoomMessageReceivedCallbackMap) {\n                zloginfo('[onInRoomMessageReceived] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onInRoomMessageReceivedCallbackMap[callbackID];\n            }\n        } else {\n            _onInRoomMessageReceivedCallbackMap[callbackID] = callback;\n        }\n    },\n    onInRoomMessageSent(callbackID, callback) {\n        if (typeof callback !== 'function') {\n            if (callbackID in _onInRoomMessageSentCallbackMap) {\n                zloginfo('[onInRoomMessageSent] Remove callback for: [', callbackID, '] because callback is not a valid function!');\n                delete _onInRoomMessageSentCallbackMap[callbackID];\n            }\n        } else {\n            _onInRoomMessageSentCallbackMap[callbackID] = callback;\n        }\n    }\n}"],"mappings":"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"}